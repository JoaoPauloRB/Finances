@using Features.FinancialTransactions
@using Web.Utils
@using Domain.Models
@using Web.Components.AddTransactionMenu.FinancialTransactionModals.IncomeModal
@inject HttpClient Http

@inherits BlazorStateComponent

<div class="add-transactions-wrap">
    <div class="transactions-list @(Display ? "display" : "")">
        <span @onclick="@(e => openIncome())">
            Receita
        </span>
        <span @onclick="@(e => Show())">
            Despesa
        </span>
        <span @onclick="@(e => Show())">
            Transferência
        </span>
        <span @onclick="@(e => Show())">
            Ação
        </span>
    </div>
    <button class="btn btn-primary btn-actions" @onclick="@Toggle">
        <span class="oi oi-plus" aria-hidden="true"></span>
    </button>
</div>

<div>
  <span>oi</span>
  <IncomeModal @ref="@incomeModal" />
</div>


@code {

    private List<Category> Categories = null;
    private List<Account> Accounts = null;
    private bool Display = false;
    private void Toggle()
    {
        Display = !Display;
    }

    private IncomeModal incomeModal = new IncomeModal();

    FinancialTransactionState State => GetState<FinancialTransactionState>();
    private FinancialTransaction financialTransaction = new FinancialTransaction();
    //private async void AddFinancialTransaction()
    //{
    //  Console.WriteLine("teste 1");
    //  await Mediator.Send(new FinancialTransactionState.AddFinancialTransactionAction(financialTransaction));
    //  StateHasChanged();
    //}

    private void openIncome()
    {
        incomeModal.Open();
        incomeModal.modal.Show();
    }

    protected override async Task OnInitializedAsync()
    {
        if (Categories == null)
        {
            Categories = await Http.GetFromJsonAsync<List<Category>>($"{Constants.BASE_URL}/category");
        }
        if (Accounts == null)
        {
            Accounts = await Http.GetFromJsonAsync<List<Account>>($"{Constants.BASE_URL}/account");
        }
    }

    private void Show()
    {
        Console.WriteLine("Abri");
    }

    private void OnSubmit()
    {
        Console.WriteLine("asdfdasf");
        Mediator.Send(new FinancialTransactionState.AddFinancialTransactionAction(financialTransaction));
        StateHasChanged();
    }
}