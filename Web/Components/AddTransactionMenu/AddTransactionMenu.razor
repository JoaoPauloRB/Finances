@using Domain.Enums
@using Web.Components.AddTransactionMenu.FinancialTransactionModals.IncomeExpensesModal
@using Web.Components.AddTransactionMenu.FinancialTransactionModals.TransferModal
@using Features.Categories
@using Features.Accounts
@inject HttpClient Http

@inherits BlazorStateComponent

<div class="add-transactions-wrap">
    <div class="transactions-list @(Display ? "display" : "")">
        <span @onclick="@(() => incomeExpensesModal.Open(FinancialTransactionType.Credit))">
            Receita
        </span>
        <span @onclick="@(() => incomeExpensesModal.Open(FinancialTransactionType.Debit))">
            Despesa
        </span>
        <span @onclick="@(e => transferModal.Open())">
            Transferência
        </span>
        <span @onclick="@(e => Show())">
            Ação
        </span>
    </div>
    <button class="btn btn-primary btn-actions" @onclick="@Toggle">
        <span class="oi oi-plus" aria-hidden="true"></span>
    </button>
</div>

<IncomeExpensesModal @ref="@incomeExpensesModal" />
<TransferModal @ref="@transferModal" />
  
@code {
    private bool Display = false;
    private void Toggle()
    {
        Display = !Display;
    }
    private IncomeExpensesModal incomeExpensesModal = new IncomeExpensesModal();
    private TransferModal transferModal = new TransferModal();
    
    protected override async Task OnInitializedAsync()
    {
      await Mediator.Send(new AccountState.ListAccountsAction());
      await Mediator.Send(new CategoryState.ListCategoriesAction());
    }

    private void Show()
    {
        Console.WriteLine("Abri");
    }
}